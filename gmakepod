#!/usr/bin/make -f

s := podcasts.ini
j := 1

src := $(dir $(realpath $(lastword $(MAKEFILE_LIST))))
mk := $(MAKE) --no-print-directory -f

run: .download.mk
	$(mk) $< -k -j$(j) -Oline

.download.mk: .files.new
	xargs $(mk) $(src)/generate.mk < $< > $@

.files.new: .files
	$(if $(f),cp $< $@,xargs $(mk) $(src)/enclosures-reject.mk < $< > $@)

.files: .enclosures
	ruby $(src)/enclosures-print.rb < $< > $@

.enclosures: .feeds
	xargs $(mk) $(src)/feed-parse.mk -k -j$$(($(j)*3)) < $< | sort -u > $@

.PHONY: .feeds
.feeds: $(s)
	ruby $(src)/ini-parse.rb $< > $@

define help :=
Options (the values are examples, not defaults):

s=file.ini
    a list of your subscriptions
e=10
    how many enclosures to download
j=4
    a number of parallel jobs for a downloading phase
f=1
    force to redownload already processed enclosures; useful w/ g=
g=ruby
    grab only enclosures matching subscriptions names in .ini
filter.type=audio
    by the enclosures 'type' attr
filter.url=mp3
    by the enclosure url; useful when the 'type' attr is missing
rsort=1
    grab enclosures starting from the bottom of the feed
e.curl='wget -q --show-progress $$1 -O $$@'
    can be used for memorizing enclosures urls w/o downloading them,
    like e.curl='@echo $$@'
e.curl.opt='-s'
    pass additional opts to curl (valid only if you do not modify `e.curl`)
t=1
    add a timestamp in the output name of each enclosure
endef

.PHONY: help
help:; $(info $(help))@:
